[tool.poetry]
name = "lorax-server"
version = "0.1.0"
description = "LoRAX Inference Python gRPC Server"
authors = ["Geoffrey Angus <geoffrey@predibase.com>", "Travis Addair <travis@predibase.com>","Olivier Dehaene <olivier@huggingface.co>"]

[tool.poetry.scripts]
lorax-server = 'lorax_server.cli:app'

[tool.poetry.dependencies]
python = "^3.9"
protobuf = "^4.21.7"
grpcio = "^1.51.1"
grpcio-status = "^1.51.1"
grpcio-reflection = "^1.51.1"
grpc-interceptor = "^0.15.0"
typer = "^0.6.1"
accelerate = { version = "^0.24.1", optional = true }
bitsandbytes = { version = "^0.43.1", optional = true }
scipy = { version = "^1.0.0", optional = true }
safetensors = "0.4.2"
loguru = "^0.6.0"
opentelemetry-api = "^1.15.0"
opentelemetry-exporter-otlp = "^1.15.0"
opentelemetry-instrumentation-grpc = "^0.42b0"
hf-transfer = "^0.1.2"
sentencepiece = "^0.1.97"
tokenizers = "0.19.1"
huggingface-hub = "^0.19.4"
transformers = "^4.40.0"
einops = "^0.6.1"
tiktoken = "^0.5.2"
texttable = { version = "^1.6.7", optional = true }
datasets = { version = "^2.14.0", optional = true }
torch = { version = "2.3.0", optional = true }
peft = { version = "0.4.0", optional = true }
boto3 = "^1.28.34"
urllib3 = "<=1.26.18"
hqq = { version = "^0.1.7", optional = true }
stanford-stk = { version = "^0.7.0", markers = "sys_platform == 'linux'" }
outlines = { version = "^0.0.40", optional = true }
prometheus-client = "^0.20.0"
py-cpuinfo = "^9.0.0"

[tool.poetry.extras]
torch = ["torch"]
accelerate = ["accelerate"]
bnb = ["bitsandbytes"]
peft = ["peft"]
quantize = ["texttable", "datasets", "accelerate", "hqq"]
outlines = ["outlines"]

[tool.poetry.group.dev.dependencies]
grpcio-tools = "^1.51.1"
pytest = "^7.3.0"


[[tool.poetry.source]]
name = "pytorch-gpu"
url = "https://download.pytorch.org/whl/cu121"
priority = "explicit"

[tool.pytest.ini_options]
markers = ["private: marks tests as requiring an admin hf token (deselect with '-m \"not private\"')"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
