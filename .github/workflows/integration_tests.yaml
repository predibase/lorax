name: LoRAX Integration Tests
on:
  workflow_call:  # Add this to make it reusable
    inputs:
      test_image_tag:
        description: 'LoRAX Docker image tag to test'
        required: true
        type: string
      use_local_image:
        description: 'Use local image instead of GitHub Container Registry'
        required: false
        type: boolean
      test_image_path:
        description: 'Path to the test image'
        required: false
        type: string

jobs:
  run-tests:
    if: inputs.test_image_tag != ''
    runs-on: a100-40gb-runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Print Test Image Tag
      run: |
        echo "Test image tag: ${{ inputs.test_image_tag }}"

    - name: Print Test Image Path
      run: |
        echo "Test image path: ${{ inputs.test_image_path }}"

    # If using local image, we need to export it from containerd to docker
    - name: Download Artifact
      if: inputs.use_local_image && inputs.test_image_path != ''
      uses: actions/download-artifact@v4
      with:
        name: lorax-test-image
        path: ${{ inputs.test_image_path }}

    - name: Load Docker Image
      if: inputs.use_local_image && inputs.test_image_path != ''
      run: |
        docker load -i ${{ inputs.test_image_path }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest docker requests

    - name: Login to GitHub Container Registry
      if: ${{ !inputs.use_local_image }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up environment variables
      run: |
        echo "HUGGING_FACE_HUB_TOKEN=${{ secrets.HUGGING_FACE_HUB_TOKEN }}" >> $GITHUB_ENV
        echo "TEST_IMAGE_TAG=${{ inputs.test_image_tag }}" >> $GITHUB_ENV

    - name: Run Embedding tests
      run: |
        cd integration-tests-2
        pytest test_embeddings.py -v --capture=tee-sys

    - name: Run LLM tests
      run: |
        cd integration-tests-2
        pytest test_base_llms.py -v --capture=tee-sys
